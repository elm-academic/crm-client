{"ast":null,"code":"var _jsxFileName = \"/home/meriem/lighthouse/Final_Project/project/client/src/components/Dashboard.js\";\nimport React from 'react';\nimport '../App.css';\nimport { PieChart, Pie, Cell, Sector } from 'recharts';\nimport styled from 'styled-components';\nconst Wrapper = styled.div`\n  margin-top: 5em;\n  margin-left: 7em;\n  margin-right: 20em;\n  margin-bottom: 5em;\n`;\n\nconst Dashboard = () => {\n  state = {\n    activeIndex: 0\n  };\n\n  onPieEnter = (data, index) => {\n    this.setState({\n      activeIndex: index\n    });\n  };\n\n  const data = [{\n    name: \"facebook\",\n    value: 120111\n  }, {\n    name: \"Instagram\",\n    value: 1547870\n  }];\n\n  const renderActiveShape = props => {\n    const RADIAN = Math.PI / 180;\n    const {\n      cx,\n      cy,\n      midAngle,\n      innerRadius,\n      outerRadius,\n      startAngle,\n      endAngle,\n      fill,\n      payload,\n      percent,\n      value\n    } = props;\n    const sin = Math.sin(-RADIAN * midAngle);\n    const cos = Math.cos(-RADIAN * midAngle);\n    const sx = cx + (outerRadius + 10) * cos;\n    const sy = cy + (outerRadius + 10) * sin;\n    const mx = cx + (outerRadius + 30) * cos;\n    const my = cy + (outerRadius + 30) * sin;\n    const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n    const ey = my;\n    const textAnchor = cos >= 0 ? 'start' : 'end';\n    return /*#__PURE__*/React.createElement(\"g\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"text\", {\n      x: cx,\n      y: cy,\n      dy: 8,\n      textAnchor: \"middle\",\n      fill: fill,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, payload.name), /*#__PURE__*/React.createElement(Sector, {\n      cx: cx,\n      cy: cy,\n      innerRadius: innerRadius,\n      outerRadius: outerRadius,\n      startAngle: startAngle,\n      endAngle: endAngle,\n      fill: fill,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Sector, {\n      cx: cx,\n      cy: cy,\n      startAngle: startAngle,\n      endAngle: endAngle,\n      innerRadius: outerRadius + 6,\n      outerRadius: outerRadius + 10,\n      fill: fill,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      d: `M${sx},${sy}L${mx},${my}L${ex},${ey}`,\n      stroke: fill,\n      fill: \"none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"circle\", {\n      cx: ex,\n      cy: ey,\n      r: 2,\n      fill: fill,\n      stroke: \"none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"text\", {\n      x: ex + (cos >= 0 ? 1 : -1) * 12,\n      y: ey,\n      textAnchor: textAnchor,\n      fill: \"#333\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, `PV ${value}`), /*#__PURE__*/React.createElement(\"text\", {\n      x: ex + (cos >= 0 ? 1 : -1) * 12,\n      y: ey,\n      dy: 18,\n      textAnchor: textAnchor,\n      fill: \"#999\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, `(Rate ${(percent * 100).toFixed(2)}%)`));\n  }; // const COLORS = ['#0088FE', '#FF8042'];\n  // const RADIAN = Math.PI / 180;\n  // const renderCustomizedLabel = ({\n  //   cx, cy, midAngle, innerRadius, outerRadius, percent, index,\n  // }) => {\n  //    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  //   const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  //   const y = cy + radius * Math.sin(-midAngle * RADIAN);\n  //   return (\n  //     <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n  //       {`${(percent * 100).toFixed(0)}%`}\n  //     </text>\n  //   );\n  // };\n\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \" Social network  \"), /*#__PURE__*/React.createElement(PieChart, {\n    width: 400,\n    height: 400,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pie, {\n    activeIndex: this.state.activeIndex,\n    activeShape: renderActiveShape,\n    data: data,\n    cx: 200,\n    cy: 200,\n    innerRadius: 60,\n    outerRadius: 80,\n    fill: \"#8884d8\",\n    dataKey: \"value\",\n    onMouseEnter: this.onPieEnter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/meriem/lighthouse/Final_Project/project/client/src/components/Dashboard.js"],"names":["React","PieChart","Pie","Cell","Sector","styled","Wrapper","div","Dashboard","state","activeIndex","onPieEnter","data","index","setState","name","value","renderActiveShape","props","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","toFixed"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport { PieChart, Pie, Cell, Sector } from 'recharts';\nimport styled from 'styled-components';\nconst Wrapper = styled.div`\n  margin-top: 5em;\n  margin-left: 7em;\n  margin-right: 20em;\n  margin-bottom: 5em;\n`;\nconst Dashboard = () => {\n state = {\n    activeIndex: 0,\n  };\n\n  onPieEnter = (data, index) => {\n    this.setState({\n      activeIndex: index,\n    });\n  };\n\nconst data =[\n      { name: \"facebook\", value: 120111},\n      {name: \"Instagram\", value : 1547870},\n   ]; \n\n   const renderActiveShape = (props) => {\n    const RADIAN = Math.PI / 180;\n    const {\n      cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\n      fill, payload, percent, value,\n    } = props;\n    const sin = Math.sin(-RADIAN * midAngle);\n    const cos = Math.cos(-RADIAN * midAngle);\n    const sx = cx + (outerRadius + 10) * cos;\n    const sy = cy + (outerRadius + 10) * sin;\n    const mx = cx + (outerRadius + 30) * cos;\n    const my = cy + (outerRadius + 30) * sin;\n    const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n    const ey = my;\n    const textAnchor = cos >= 0 ? 'start' : 'end';\n  \n    return (\n      <g>\n        <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>{payload.name}</text>\n        <Sector\n          cx={cx}\n          cy={cy}\n          innerRadius={innerRadius}\n          outerRadius={outerRadius}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          fill={fill}\n        />\n        <Sector\n          cx={cx}\n          cy={cy}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          innerRadius={outerRadius + 6}\n          outerRadius={outerRadius + 10}\n          fill={fill}\n        />\n        <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\n        <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n        <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\">{`PV ${value}`}</text>\n        <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#999\">\n          {`(Rate ${(percent * 100).toFixed(2)}%)`}\n        </text>\n      </g>\n    );\n  };\n  \n// const COLORS = ['#0088FE', '#FF8042'];\n// const RADIAN = Math.PI / 180;\n// const renderCustomizedLabel = ({\n//   cx, cy, midAngle, innerRadius, outerRadius, percent, index,\n// }) => {\n//    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n//   const x = cx + radius * Math.cos(-midAngle * RADIAN);\n//   const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n//   return (\n//     <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n//       {`${(percent * 100).toFixed(0)}%`}\n//     </text>\n//   );\n// };\n \nreturn (\n  <Wrapper>\n    <div className = 'App'>\n      <h1> Social network  </h1>\n      <PieChart width={400} height={400}>\n        <Pie\n          activeIndex={this.state.activeIndex}\n          activeShape={renderActiveShape}\n          data={data}\n          cx={200}\n          cy={200}\n          innerRadius={60}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n          onMouseEnter={this.onPieEnter}\n        />\n      </PieChart>\n      {/* <PieChart width={400} height={400}>\n        <Pie\n          data={data}\n          cx={200}\n          cy={200}\n          labelLine={false}\n          label={renderCustomizedLabel}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n        >\n          {\n            data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n          }\n        </Pie>\n      </PieChart> */}\n    </div>\n  </Wrapper>\n)\n\n};\n\n\n\nexport default Dashboard;\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}