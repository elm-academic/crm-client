{"ast":null,"code":"var _jsxFileName = \"/home/meriem/lighthouse/Final_Project/project/client/src/components/ClientList.js\";\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import ClientItem from './ClientItem';\n// const ClientList = () => {\n// //set default value of client to array\n// const [clients, setClients] = useState([]);\n// useEffect(() => {\n//   Promise.all([\n//     axios.get('/clients'),\n//   ]).then((all) => {\n//     setClients(all[0].data);   \n//  });\n// }, []);\n// const getClients = async()=>{\n//  const response = await axios.get(`/clients`);\n//  console.log(\"console log of getClients\", response); \n//  setClients(response.data);\n// }\n// const handleDelete =(id) => {\n//   axios.delete(`/clients/${id}`)\n//   .then( res=> {\n//     console.log(\"res\", res);\n//     if(res.status !== 200) {\n//       alert(\"Not able to delete client\");\n//     }\n//     else {\n//       alert(\"client deleted\");\n//       getClients();\n//     }\n//   })\n// }\n// const clients_list = clients.map((client) => <ClientItem\n//   key = {client.id}\n//   id = {client.id}\n//   first_name = {client.first_name}\n//   last_name = {client.last_name}\n//   email = {client.email}\n//   region = {client.region}\n//   tweeter_username = {client.tweeter_username}\n//   onDelete={handleDelete}\n//   />\n//  )\n// return (\n//   <table className=\"table table-striped\">\n//   <thead>\n//     <tr>\n//       <th scope=\"col\">id</th>\n//       <th scope=\"col\">First Name</th>\n//       <th scope=\"col\">Last Name</th>\n//       <th scope=\"col\">Email</th>\n//       <th scope=\"col\">Region</th>\n//       <th scope=\"col\">Tweeter_Username</th>\n//       <th scope=\"col\">Actions</th>\n//     </tr>\n//   </thead>\n//   <tbody>\n//      {clients_list}\n//   </tbody>\n// </table>\n// );\n// }\n// export default ClientList;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ClientItem from './ClientItem';\n\nconst ClientList = () => {\n  //set default value of client to array\n  const [clients, setClients] = useState([]);\n  useEffect(() => {\n    Promise.all([axios.get('/clients')]).then(all => {\n      setClients(all[0].data);\n    });\n  }, []);\n\n  const getClients = async () => {\n    const response = await axios.get(`/clients`);\n    console.log(\"console log of getClients\", response);\n    setClients(response.data);\n  };\n\n  const handleDelete = id => {\n    console.log(\"handle delete\", id);\n    axios.put(`/clients/${id}`).then(res => {\n      console.log(\"res\", res);\n\n      if (res.status !== 200) {\n        alert(\"Not able to delete client\");\n      } else {\n        getClients();\n        alert(\"client deleted\");\n      }\n    });\n  };\n\n  const clients_list = clients.map(client => /*#__PURE__*/React.createElement(ClientItem, {\n    key: client.id,\n    id: client.id,\n    first_name: client.first_name,\n    last_name: client.last_name,\n    email: client.email,\n    department: client.department,\n    client_type: client.client_type,\n    work_type: client.work_type,\n    region: client.region,\n    position_title: client.position_title,\n    tweeter_username: client.tweeter_username,\n    initial_contact_made: client.initial_contact_made,\n    onDelete: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 46\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"table\", {\n    className: \"card-header\",\n    id: \"headingOne\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"accordion\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, \"id\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, \"Department\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, \"Client Type\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, \"Work Category\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, \"Region\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, \"Position Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, \"Tweeter_Username\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, \"Initial Contact Done\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, \"Actions\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 3\n    }\n  }, clients_list));\n};\n\nexport default ClientList;","map":{"version":3,"sources":["/home/meriem/lighthouse/Final_Project/project/client/src/components/ClientList.js"],"names":["React","useState","useEffect","axios","ClientItem","ClientList","clients","setClients","Promise","all","get","then","data","getClients","response","console","log","handleDelete","id","put","res","status","alert","clients_list","map","client","first_name","last_name","email","department","client_type","work_type","region","position_title","tweeter_username","initial_contact_made"],"mappings":"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","sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import ClientItem from './ClientItem';\n\n// const ClientList = () => {\n\n// //set default value of client to array\n  \n// const [clients, setClients] = useState([]);\n// useEffect(() => {\n//   Promise.all([\n//     axios.get('/clients'),\n//   ]).then((all) => {\n//     setClients(all[0].data);   \n//  });\n// }, []);\n\n// const getClients = async()=>{\n//  const response = await axios.get(`/clients`);\n//  console.log(\"console log of getClients\", response); \n//  setClients(response.data);\n// }\n// const handleDelete =(id) => {\n  \n//   axios.delete(`/clients/${id}`)\n//   .then( res=> {\n//     console.log(\"res\", res);\n//     if(res.status !== 200) {\n//       alert(\"Not able to delete client\");\n//     }\n//     else {\n//       alert(\"client deleted\");\n//       getClients();\n//     }\n//   })\n// }\n\n// const clients_list = clients.map((client) => <ClientItem\n//   key = {client.id}\n//   id = {client.id}\n//   first_name = {client.first_name}\n//   last_name = {client.last_name}\n//   email = {client.email}\n//   region = {client.region}\n//   tweeter_username = {client.tweeter_username}\n//   onDelete={handleDelete}\n//   />\n//  )\n\n\n// return (\n//   <table className=\"table table-striped\">\n//   <thead>\n//     <tr>\n//       <th scope=\"col\">id</th>\n//       <th scope=\"col\">First Name</th>\n//       <th scope=\"col\">Last Name</th>\n//       <th scope=\"col\">Email</th>\n//       <th scope=\"col\">Region</th>\n//       <th scope=\"col\">Tweeter_Username</th>\n//       <th scope=\"col\">Actions</th>\n//     </tr>\n//   </thead>\n  \n//   <tbody>\n//      {clients_list}\n//   </tbody>\n// </table>\n// );\n\n// }\n\n\n// export default ClientList;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ClientItem from './ClientItem';\n\nconst ClientList = () => {\n\n//set default value of client to array\n  \nconst [clients, setClients] = useState([]);\nuseEffect(() => {\n  Promise.all([\n    axios.get('/clients'),\n  ]).then((all) => {\n    setClients(all[0].data);   \n });\n}, []);\n\nconst getClients = async()=>{\n const response = await axios.get(`/clients`);\n console.log(\"console log of getClients\", response); \n setClients(response.data);\n}\nconst handleDelete =(id) => {\n  console.log(\"handle delete\", id);\n  axios.put(`/clients/${id}`)\n  .then( res=> {\n    console.log(\"res\", res);\n    if(res.status !== 200) {\n      alert(\"Not able to delete client\");\n    }\n    else {\n      getClients();\n      alert(\"client deleted\");\n      \n    }\n  })\n}\n\nconst clients_list = clients.map((client) => <ClientItem\n  key = {client.id}\n  id = {client.id}\n  first_name = {client.first_name}\n  last_name = {client.last_name}\n  email = {client.email}\n  department = {client.department}\n  client_type ={client.client_type}\n  work_type ={client.work_type}\n  region = {client.region}\n  position_title = {client.position_title}\n  tweeter_username = {client.tweeter_username}\n  initial_contact_made ={client.initial_contact_made}\n  onDelete={handleDelete}\n  />\n )\n\n\nreturn (\n<table className= \"card-header\" id=\"headingOne\">\n  <thead className = \"accordion\">\n    <div>\n    <tr>\n      <th scope=\"col\">id</th>\n      <th scope=\"col\">First Name</th>\n      <th scope=\"col\">Last Name</th>\n      <th scope=\"col\">Email</th>\n      <th scope=\"col\">Department</th>\n      <th scope=\"col\">Client Type</th>\n      <th scope=\"col\">Work Category</th>\n      <th scope=\"col\">Region</th>\n      <th scope=\"col\">Position Title</th>\n      <th scope=\"col\">Tweeter_Username</th>\n      <th scope=\"col\">Initial Contact Done</th>\n      <th scope=\"col\">Actions</th>\n    </tr>\n    </div>\n  </thead>\n  <tbody>\n     {clients_list}\n  </tbody>\n</table>\n);\n\n}\n\n\nexport default ClientList;"]},"metadata":{},"sourceType":"module"}