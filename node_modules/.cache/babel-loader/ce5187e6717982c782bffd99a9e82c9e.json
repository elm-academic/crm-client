{"ast":null,"code":"var _jsxFileName = \"/home/meriem/lighthouse/Final_Project/project/client/src/components/Dashboard.js\";\n// import React, { useState, useEffect } from 'react';\n// import { BarChart, XAxis, YAxis, CartesianGrid, Bar, ResponsiveContainer, PieChart, Pie, Cell, Sector, Tooltip, Legend } from 'recharts';\n// import styled from 'styled-components';\n// import axios from 'axios';\n// const StyledChart1 = styled.div`\n//   height: 40%;\n//   width: 40%; \n//   text-align: center; /* Aligns <a> inside of NavIcon div */\n//   background-color: #F5F5F5;\n//   margin: 10px 10px;\n//   padding: 12px 6px;\n//   border-radius: 5px;\n// `;\n// const Wrapper = styled.div`\n//   margin-top: 5em;\n//   margin-left: 7em;\n//   margin-right: 20em;\n//   margin-bottom: 5em;\n// `;\n// const Dashboard = () => {\n//   const [data2, setData] = useState([]);\n//   useEffect(() => {\n//     Promise.all([\n//       axios.get('/dashboard'),\n//     ]).then((all) => {\n//       console.log(\"all[0]\",all[0]);\n//       setData(all);   \n//     });\n//   }, []);\n//  console.log(\"data2\",data2);\n// //  const [data2, setData] = useState([]);\n// //  useEffect(() => {\n// //    Promise.all([\n// //      axios.get('/dashboard'),\n// //    ]).then((all) => {\n// //      setData(all[0].data[0].count);   \n// //      console.log(\"all[0]\",all);\n// //    });\n// //  }, []);\n// // console.log(\"data2\",data2);\n//  // const data = [\n//   //   { name: 'Quality reviews in progress', value: 152 }, { name: 'Quality review completed', value: 300 },\n//   // ];\n// const data =[\n//       { name: \"facebook\", value: 5},\n//       {name: \"Instagram\", value : 6},\n//    ]; \n// const COLORS = ['#FFC107', '#4CAF50', '#FFBB28', '#FF8042'];\n// const RADIAN = Math.PI / 180;\n// const renderCustomizedLabel = ({\n//   cx, cy, midAngle, innerRadius, outerRadius, percent, index,\n// }) => {\n//   const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n//   const x = cx + radius * Math.cos(-midAngle * RADIAN);\n//   const y = cy + radius * Math.sin(-midAngle * RADIAN);\n//   return (\n//     <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n//       {`${(percent * 100).toFixed(0)}%`}\n//     </text>\n//   );\n// };\n// const data3 = [\n//   {\n//     name: 'Current', current: 10,\n//   },\n//   {\n//     name: 'Completed', completed: 15,\n//   },\n//   {\n//     name: 'Upcoming', upcoming: 5,\n//   },\n// ];\n// const data4 = [\n//   { name: 'Group A', value: 400 },\n//   { name: 'Group B', value: 300 },\n// ];\n// return (\n//   <Wrapper>\n//   <div className ='App'>   \n//   <h2>Dashboard</h2>\n//   {/* <StyledChart1> */}\n//   <h5> Quality reviews </h5>\n//   <PieChart width={400} height={400}>\n//           <Pie\n//           data={data}\n//           cx={200}\n//           cy={200}\n//           //labelLine={true}\n//           //label\n//           labelLine={false}\n//           label={renderCustomizedLabel}\n//           outerRadius={100}\n//           fill=\"#8884d8\"\n//           dataKey=\"value\"\n//           Legend\n//         >\n//           {\n//             data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n//           }\n//         </Pie>\n//         <Tooltip/>\n//         <Legend/>\n//   </PieChart>\n//   {/* </StyledChart1> */}\n//   {/* <StyledChart1> */}\n//   <h5> Projects </h5>\n//   <BarChart\n//         width={500}\n//         height={300}\n//         data={data3}\n//         margin={{\n//           top: 5, right: 30, left: 20, bottom: 5,\n//         }}\n//       >\n//         <CartesianGrid strokeDasharray=\"3 3\" />\n//         <XAxis dataKey=\"name\" />\n//         <YAxis />\n//         <Tooltip />\n//         <Legend />\n//         <Bar dataKey=\"current\" fill=\"#8884d8\" />\n//         <Bar dataKey=\"completed\" fill=\"#82ca9d\" />\n//         <Bar dataKey=\"upcoming\" fill=\"#4CAF50\" />\n//   </BarChart>\n//   {/* </StyledChart1> */}\n// {/* <StyledChart1> */}\n// <PieChart width={800} height={400} >\n//         <Pie\n//           data={data4}\n//           cx={120}\n//           cy={200}\n//           innerRadius={60}\n//           outerRadius={80}\n//           fill=\"#8884d8\"\n//           paddingAngle={5}\n//           dataKey=\"value\"\n//         >\n//           {\n//             data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n//           }\n//         </Pie>\n//         <Tooltip />\n//         <Legend />\n//         </PieChart>\n// {/* </StyledChart1> */}\n// </div>\n// </Wrapper>\n// )\n// };\n// export default Dashboard;\nimport React from \"react\";\nimport Assessment from \"@material-ui/icons/Assessment\";\nimport Face from \"@material-ui/icons/Face\";\nimport ThumbUp from \"@material-ui/icons/ThumbUp\";\nimport ShoppingCart from \"@material-ui/icons/ShoppingCart\";\nimport InfoBox from \"../components/dashboard/InfoBox\";\nimport NewOrders from \"../components/dashboard/NewOrders\";\nimport MonthlySales from \"../components/dashboard/MonthlySales\";\nimport BrowserUsage from \"../components/dashboard/BrowserUsage\";\nimport LineBarChart from \"../components/dashboard/LineBarChart\";\nimport Data from \"../data\";\nimport { cyan, pink, purple, orange, grey } from \"@material-ui/core/colors\";\nimport { Grid } from \"@material-ui/core\";\nconst cyan600 = cyan[\"600\"];\nconst pink600 = pink[\"600\"];\nconst purple600 = purple[\"600\"];\nconst orange600 = orange[\"600\"];\nconst grey600 = grey[\"600\"];\nconst styles = {\n  navigation: {\n    fontSize: 15,\n    fontWeight: 400,\n    //TypographyStyle.fontWeightLight,\n    color: grey600,\n    // paddingBottom: 15,\n    display: \"block\"\n  },\n  container: {\n    marginTop: \"3em\"\n  },\n  cell: {\n    padding: \"1em\"\n  },\n  content: {\n    paddingTop: 60,\n    padding: 20\n  }\n};\n\nconst Dashboard = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    style: styles.container,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: styles.cell,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfoBox, {\n    Icon: ShoppingCart,\n    spanBgColor: pink600,\n    title: \"Total Profit\",\n    value: \"1500k\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: styles.cell,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfoBox, {\n    Icon: ThumbUp,\n    spanBgColor: cyan600,\n    title: \"Likes\",\n    value: \"4231\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: styles.cell,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfoBox, {\n    Icon: Assessment,\n    spanBgColor: purple600,\n    title: \"Sales\",\n    value: \"460\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: styles.cell,\n    xs: 12,\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfoBox, {\n    Icon: Face,\n    spanBgColor: orange600,\n    title: \"New Members\",\n    value: \"248\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: styles.cell,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NewOrders, {\n    data: Data.dashBoardPage.newOrders,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: styles.cell,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MonthlySales, {\n    data: Data.dashBoardPage.monthlySales,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: styles.cell,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LineBarChart, {\n    data: Data.dashBoardPage.lineBarChart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: styles.cell,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BrowserUsage, {\n    data: Data.dashBoardPage.browserUsage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default DashboardPage;","map":{"version":3,"sources":["/home/meriem/lighthouse/Final_Project/project/client/src/components/Dashboard.js"],"names":["React","Assessment","Face","ThumbUp","ShoppingCart","InfoBox","NewOrders","MonthlySales","BrowserUsage","LineBarChart","Data","cyan","pink","purple","orange","grey","Grid","cyan600","pink600","purple600","orange600","grey600","styles","navigation","fontSize","fontWeight","color","display","container","marginTop","cell","padding","content","paddingTop","Dashboard","dashBoardPage","newOrders","monthlySales","lineBarChart","browserUsage","DashboardPage"],"mappings":";AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAEA;AAEA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,EAA6BC,MAA7B,EAAqCC,IAArC,QAAiD,0BAAjD;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,MAAMC,OAAO,GAAGN,IAAI,CA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","sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { BarChart, XAxis, YAxis, CartesianGrid, Bar, ResponsiveContainer, PieChart, Pie, Cell, Sector, Tooltip, Legend } from 'recharts';\n// import styled from 'styled-components';\n// import axios from 'axios';\n\n\n\n// const StyledChart1 = styled.div`\n//   height: 40%;\n//   width: 40%; \n//   text-align: center; /* Aligns <a> inside of NavIcon div */\n//   background-color: #F5F5F5;\n//   margin: 10px 10px;\n//   padding: 12px 6px;\n//   border-radius: 5px;\n  \n// `;\n// const Wrapper = styled.div`\n//   margin-top: 5em;\n//   margin-left: 7em;\n//   margin-right: 20em;\n//   margin-bottom: 5em;\n// `;\n// const Dashboard = () => {\n  \n//   const [data2, setData] = useState([]);\n//   useEffect(() => {\n//     Promise.all([\n//       axios.get('/dashboard'),\n//     ]).then((all) => {\n//       console.log(\"all[0]\",all[0]);\n//       setData(all);   \n    \n//     });\n//   }, []);\n//  console.log(\"data2\",data2);\n \n \n// //  const [data2, setData] = useState([]);\n// //  useEffect(() => {\n// //    Promise.all([\n// //      axios.get('/dashboard'),\n// //    ]).then((all) => {\n// //      setData(all[0].data[0].count);   \n// //      console.log(\"all[0]\",all);\n// //    });\n// //  }, []);\n// // console.log(\"data2\",data2);\n\n \n//  // const data = [\n//   //   { name: 'Quality reviews in progress', value: 152 }, { name: 'Quality review completed', value: 300 },\n//   // ];\n  \n// const data =[\n//       { name: \"facebook\", value: 5},\n//       {name: \"Instagram\", value : 6},\n//    ]; \n// const COLORS = ['#FFC107', '#4CAF50', '#FFBB28', '#FF8042'];\n// const RADIAN = Math.PI / 180;\n// const renderCustomizedLabel = ({\n//   cx, cy, midAngle, innerRadius, outerRadius, percent, index,\n// }) => {\n//   const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n//   const x = cx + radius * Math.cos(-midAngle * RADIAN);\n//   const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n//   return (\n//     <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n//       {`${(percent * 100).toFixed(0)}%`}\n//     </text>\n//   );\n// };\n \n// const data3 = [\n//   {\n//     name: 'Current', current: 10,\n//   },\n//   {\n//     name: 'Completed', completed: 15,\n//   },\n//   {\n//     name: 'Upcoming', upcoming: 5,\n//   },\n \n// ];\n\n// const data4 = [\n//   { name: 'Group A', value: 400 },\n//   { name: 'Group B', value: 300 },\n// ];\n\n// return (\n  \n//   <Wrapper>\n//   <div className ='App'>   \n//   <h2>Dashboard</h2>\n//   {/* <StyledChart1> */}\n//   <h5> Quality reviews </h5>\n//   <PieChart width={400} height={400}>\n//           <Pie\n//           data={data}\n//           cx={200}\n//           cy={200}\n//           //labelLine={true}\n//           //label\n//           labelLine={false}\n//           label={renderCustomizedLabel}\n//           outerRadius={100}\n//           fill=\"#8884d8\"\n//           dataKey=\"value\"\n//           Legend\n//         >\n//           {\n//             data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n//           }\n//         </Pie>\n//         <Tooltip/>\n//         <Legend/>\n//   </PieChart>\n//   {/* </StyledChart1> */}\n//   {/* <StyledChart1> */}\n//   <h5> Projects </h5>\n//   <BarChart\n//         width={500}\n//         height={300}\n//         data={data3}\n//         margin={{\n//           top: 5, right: 30, left: 20, bottom: 5,\n//         }}\n//       >\n//         <CartesianGrid strokeDasharray=\"3 3\" />\n//         <XAxis dataKey=\"name\" />\n//         <YAxis />\n//         <Tooltip />\n//         <Legend />\n//         <Bar dataKey=\"current\" fill=\"#8884d8\" />\n//         <Bar dataKey=\"completed\" fill=\"#82ca9d\" />\n//         <Bar dataKey=\"upcoming\" fill=\"#4CAF50\" />\n//   </BarChart>\n//   {/* </StyledChart1> */}\n\n// {/* <StyledChart1> */}\n\n// <PieChart width={800} height={400} >\n//         <Pie\n//           data={data4}\n//           cx={120}\n//           cy={200}\n//           innerRadius={60}\n//           outerRadius={80}\n//           fill=\"#8884d8\"\n//           paddingAngle={5}\n//           dataKey=\"value\"\n//         >\n//           {\n//             data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n//           }\n//         </Pie>\n//         <Tooltip />\n//         <Legend />\n//         </PieChart>\n// {/* </StyledChart1> */}\n\n\n\n\n\n// </div>\n// </Wrapper>\n// )\n\n// };\n\n// export default Dashboard;\n\n\nimport React from \"react\";\nimport Assessment from \"@material-ui/icons/Assessment\";\nimport Face from \"@material-ui/icons/Face\";\nimport ThumbUp from \"@material-ui/icons/ThumbUp\";\nimport ShoppingCart from \"@material-ui/icons/ShoppingCart\";\nimport InfoBox from \"../components/dashboard/InfoBox\";\nimport NewOrders from \"../components/dashboard/NewOrders\";\nimport MonthlySales from \"../components/dashboard/MonthlySales\";\nimport BrowserUsage from \"../components/dashboard/BrowserUsage\";\nimport LineBarChart from \"../components/dashboard/LineBarChart\";\nimport Data from \"../data\";\n\nimport { cyan, pink, purple, orange, grey } from \"@material-ui/core/colors\";\nimport { Grid } from \"@material-ui/core\";\n\nconst cyan600 = cyan[\"600\"];\nconst pink600 = pink[\"600\"];\nconst purple600 = purple[\"600\"];\nconst orange600 = orange[\"600\"];\nconst grey600 = grey[\"600\"];\n\nconst styles = {\n  navigation: {\n    fontSize: 15,\n    fontWeight: 400, //TypographyStyle.fontWeightLight,\n    color: grey600,\n    // paddingBottom: 15,\n    display: \"block\",\n  },\n  container: {\n    marginTop: \"3em\",\n  },\n  cell: {\n    padding: \"1em\",\n  },\n  content:{\n    paddingTop:60,\n    padding:20,\n  }\n};\n\nconst Dashboard = () => {\n  return (\n    <div style={styles.content}>\n      <Grid container style={styles.container} spacing={3}>\n        <Grid item style={styles.cell} xs={12} md={3}>\n          <InfoBox\n            Icon={ShoppingCart}\n            spanBgColor={pink600}\n            title=\"Total Profit\"\n            value=\"1500k\"\n          />\n        </Grid>\n        <Grid item style={styles.cell} xs={12} md={3}>\n          <InfoBox Icon={ThumbUp} spanBgColor={cyan600} title=\"Likes\" value=\"4231\" />\n        </Grid>\n        <Grid item style={styles.cell} xs={12} md={3}>\n          <InfoBox\n            Icon={Assessment}\n            spanBgColor={purple600}\n            title=\"Sales\"\n            value=\"460\"\n          />\n        </Grid>\n        <Grid item style={styles.cell} xs={12} md={3}>\n          <InfoBox\n            Icon={Face}\n            spanBgColor={orange600}\n            title=\"New Members\"\n            value=\"248\"\n          />\n        </Grid>\n        <Grid item style={styles.cell} xs={12} md={6}>\n          <NewOrders data={Data.dashBoardPage.newOrders} />\n        </Grid>\n        <Grid item style={styles.cell} xs={12} md={6}>\n          <MonthlySales data={Data.dashBoardPage.monthlySales} />\n        </Grid>\n        <Grid item style={styles.cell} xs={12} md={6}>\n          <LineBarChart data={Data.dashBoardPage.lineBarChart} />\n        </Grid>\n        <Grid item style={styles.cell} xs={12} md={6}>\n          <BrowserUsage data={Data.dashBoardPage.browserUsage} />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default DashboardPage;\n"]},"metadata":{},"sourceType":"module"}