{"ast":null,"code":"var _jsxFileName = \"/home/meriem/lighthouse/Final_Project/project/client/src/components/ClientItem.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProjectItem from './ProjectItem';\nimport axios from 'axios';\n\nconst ClientItem = ({\n  id,\n  first_name,\n  last_name,\n  email,\n  region,\n  tweeter_username,\n  onDelete\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    Promise.all([axios.get(`/clients/${id}/projects`)]).then(all => {\n      console.log(all);\n      setProjects(all[0].data);\n    });\n  }, []);\n  console.log(\"projects\", projects);\n  const clientProjects = projects.map(project => /*#__PURE__*/React.createElement(ProjectItem, {\n    key: project.id,\n    id: project.id,\n    name: project.name,\n    start_date: project.start_date,\n    end_date: project.end_date,\n    type: project.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 50\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"collapsible\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"toggle\",\n    onClick: () => setIsOpen(!isOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, first_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, last_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, email), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, region), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, tweeter_username), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/clients/${id}/edit`,\n    className: \"btn btn-success mr-1\",\n    role: \"button\",\n    \"aria-pressed\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \" Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success mr-1\",\n    type: \"button\",\n    onClick: () => {\n      onDelete(id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \" Delete\")), isOpen && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, clientProjects))));\n};\n\nexport default ClientItem;","map":{"version":3,"sources":["/home/meriem/lighthouse/Final_Project/project/client/src/components/ClientItem.js"],"names":["React","useState","useEffect","Link","ProjectItem","axios","ClientItem","id","first_name","last_name","email","region","tweeter_username","onDelete","isOpen","setIsOpen","projects","setProjects","Promise","all","get","then","console","log","data","clientProjects","map","project","name","start_date","end_date","type"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom'; \nimport ProjectItem from './ProjectItem';\nimport axios from 'axios';\n\nconst ClientItem = ({id, first_name, last_name, email, region, tweeter_username, onDelete}) => {\nconst [isOpen, setIsOpen] = useState(false);\nconst [projects, setProjects] = useState([]);\nuseEffect(() => {\n  Promise.all([\n    axios.get(`/clients/${id}/projects`),\n  ]).then((all) => {\n    console.log(all);\n    setProjects(all[0].data);   \n });\n}, []);\nconsole.log(\"projects\", projects);\nconst clientProjects = projects.map((project) => <ProjectItem\n    key = {project.id}\n    id = {project.id}\n    name = {project.name}\n    start_date = {project.start_date}\n    end_date = {project.end_date}\n    type = {project.type}\n    />\n)\nreturn (\n<div className=\"collapsible\"> \n<tr className=\"toggle\" onClick ={()=> setIsOpen(!isOpen)} >  \n    <th scope=\"row\">{id}</th>\n    <td>{first_name}</td>\n    <td>{last_name}</td>\n    <td>{email}</td>\n    <td>{region}</td>\n    <td>{tweeter_username}</td>\n    {/* <th>Edit | Delete</th> */}\n    <td> \n        <Link to= {`/clients/${id}/edit`}\n        \n            className=\"btn btn-success mr-1\"\n            role=\"button\"\n            aria-pressed=\"true\" \n            > Edit\n        </Link>\n        <button\n            className=\"btn btn-success mr-1\"\n            type=\"button\"\n            onClick={()=>{ onDelete(id)}}> Delete\n        </button>\n    </td>\n{isOpen && \n<div>\n        <ul>\n             {clientProjects}\n        </ul>\n</div>}\n</tr>\n</div>\n\n);\n  \n}\n\n\nexport default ClientItem;\n"]},"metadata":{},"sourceType":"module"}