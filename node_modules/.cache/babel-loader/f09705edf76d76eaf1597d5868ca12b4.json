{"ast":null,"code":"var _jsxFileName = \"/home/meriem/lighthouse/Final_Project/project/client/src/components/Sidebar.js\";\nimport React from 'react';\nimport styled from \"styled-components\";\nimport { BrowserRouter as Router, Route, Link, withRouter } from \"react-router-dom\";\n/* This defines the actual bar going down the screen */\n\nconst StyledSideNav = styled.div`\n  position: fixed;\n  height: 100%;\n  width: 100px;\n  z-index: 1;      /* Stay on top of everything */\n  top: 3.7em;      /* Stay at the top */\n  background-color: #8e9561;\n  overflow-x: hidden;     /* Disable horizontal scroll */\n  padding-top: 10px;\n`;\nconst NavIcon = styled.div`\n  font-family: Tahoma;\n  margin-top: 5px;\n  font-size: 11px;\n  text-align: center;\n  padding:0;\n`;\nconst StyledNavItem = styled.div`\n  padding-top: 25px;\n  height: 90px;\n  width: 100px; /* width must be same size as NavBar to center */\n  text-align: center; /* Aligns <a> inside of NavIcon div */\n  margin-bottom: 0;   /* Puts space between NavItems */\n  a {\n    font-size: 2.7em;\n    color: ${props => props.active ? \"white\" : \"#362F07\"};\n    :hover {\n      opacity: 0.7;\n      text-decoration: none;\n    }  \n  }\n`;\n\nclass NavItem extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      const {\n        path,\n        onItemClick\n      } = this.props;\n      onItemClick(path);\n    };\n  }\n\n  render() {\n    const {\n      active\n    } = this.props;\n    return /*#__PURE__*/React.createElement(StyledNavItem, {\n      active: active,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: this.props.path,\n      className: this.props.css,\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NavIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, this.props.name))));\n  }\n\n}\n\nclass SideNav extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onItemClick = path => {\n      this.setState({\n        activePath: path\n      });\n      /* Sets activePath which causes rerender which causes CSS to change */\n    };\n\n    this.state = {\n      activePath: props.location.pathname,\n      items: [{\n        path: '/dashboard',\n        name: 'Dashboard',\n        css: 'fa fa-fw fa-chart-area',\n        key: 1\n      }, {\n        path: '/clients',\n\n        /* path is used as id to check which NavItem is active basically */\n        name: 'Client',\n        css: 'fa fa-fw fa-user-circle',\n        key: 2\n        /* Key is required, else console throws error. Does this please you Mr. Browser?! */\n\n      }, {\n        path: '/clients/new',\n        name: 'Add Client',\n        css: 'fa fa-fw fa-user-plus',\n        key: 3\n      }, {\n        path: '/projects',\n        name: 'Projects',\n        css: 'fas fa-tasks',\n        key: 4\n      }, {\n        path: '/projects/new',\n        name: 'Add Project',\n        css: 'fa fa-fw fa-plus-square',\n        key: 5\n      }, {\n        path: '/notes',\n        name: 'Client Notes',\n        css: 'fa fa-fw fa-sticky-note',\n        key: 6\n      }]\n    };\n  }\n\n  render() {\n    const {\n      items,\n      activePath\n    } = this.state;\n    return /*#__PURE__*/React.createElement(StyledSideNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    },\n    /* items = just array AND map() loops thru that array AND item is param of that loop */\n    items.map(item => {\n      /* Return however many NavItems in array to be rendered */\n      return /*#__PURE__*/React.createElement(NavItem, {\n        path: item.path,\n        name: item.name,\n        css: item.css,\n        onItemClick: this.onItemClick\n        /* Simply passed an entire function to onClick prop */\n        ,\n        active: item.path === activePath,\n        key: item.key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      });\n    }));\n  }\n\n}\n\nconst RouterSideNav = withRouter(SideNav);\nexport default class Sidebar extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(RouterSideNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/meriem/lighthouse/Final_Project/project/client/src/components/Sidebar.js"],"names":["React","styled","BrowserRouter","Router","Route","Link","withRouter","StyledSideNav","div","NavIcon","StyledNavItem","props","active","NavItem","Component","handleClick","path","onItemClick","render","css","name","SideNav","constructor","setState","activePath","state","location","pathname","items","key","map","item","RouterSideNav","Sidebar"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport { BrowserRouter as Router, Route, Link, withRouter } from \"react-router-dom\";\r\n\r\n/* This defines the actual bar going down the screen */\r\nconst StyledSideNav = styled.div`\r\n  position: fixed;\r\n  height: 100%;\r\n  width: 100px;\r\n  z-index: 1;      /* Stay on top of everything */\r\n  top: 3.7em;      /* Stay at the top */\r\n  background-color: #8e9561;\r\n  overflow-x: hidden;     /* Disable horizontal scroll */\r\n  padding-top: 10px;\r\n`;\r\nconst NavIcon = styled.div`\r\n  font-family: Tahoma;\r\n  margin-top: 5px;\r\n  font-size: 11px;\r\n  text-align: center;\r\n  padding:0;\r\n`;\r\nconst StyledNavItem = styled.div`\r\n  padding-top: 25px;\r\n  height: 90px;\r\n  width: 100px; /* width must be same size as NavBar to center */\r\n  text-align: center; /* Aligns <a> inside of NavIcon div */\r\n  margin-bottom: 0;   /* Puts space between NavItems */\r\n  a {\r\n    font-size: 2.7em;\r\n    color: ${(props) => props.active ? \"white\" : \"#362F07\"};\r\n    :hover {\r\n      opacity: 0.7;\r\n      text-decoration: none;\r\n    }  \r\n  }\r\n`;\r\n\r\nclass NavItem extends React.Component {\r\n  handleClick = () => {\r\n    const { path, onItemClick } = this.props;\r\n    onItemClick(path);\r\n  }\r\n  render() {\r\n    const { active } = this.props;\r\n    return (\r\n      <StyledNavItem active={active}>\r\n        <Link to={this.props.path} className={this.props.css} onClick={this.handleClick}>\r\n          <NavIcon>\r\n            <p>{this.props.name}</p>\r\n          </NavIcon>\r\n        </Link>\r\n      </StyledNavItem>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass SideNav extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activePath: props.location.pathname,\r\n      items: [\r\n        {\r\n          path: '/dashboard',\r\n          name: 'Dashboard',\r\n          css: 'fa fa-fw fa-chart-area',\r\n          key: 1\r\n        },\r\n        {\r\n          path: '/clients', /* path is used as id to check which NavItem is active basically */\r\n          name: 'Client',\r\n          css: 'fa fa-fw fa-user-circle',\r\n          key: 2 /* Key is required, else console throws error. Does this please you Mr. Browser?! */\r\n        },\r\n        {\r\n          path: '/clients/new',\r\n          name: 'Add Client',\r\n          css: 'fa fa-fw fa-user-plus',\r\n          key: 3\r\n        },\r\n        {\r\n          path: '/projects',\r\n          name: 'Projects',\r\n          css: 'fas fa-tasks',\r\n          key: 4\r\n        },\r\n        {\r\n          path: '/projects/new',\r\n          name: 'Add Project',\r\n          css: 'fa fa-fw fa-plus-square',\r\n          key: 5\r\n        },\r\n        {\r\n          path: '/notes',\r\n          name: 'Client Notes',\r\n          css: 'fa fa-fw fa-sticky-note',\r\n          key: 6\r\n        },\r\n      ]\r\n    }  \r\n  }\r\n\r\n  onItemClick = (path) => {\r\n    this.setState({ activePath: path }); /* Sets activePath which causes rerender which causes CSS to change */\r\n  }\r\n\r\n  render() {\r\n    const { items, activePath } = this.state;\r\n    return (\r\n      <StyledSideNav>\r\n        {\r\n          /* items = just array AND map() loops thru that array AND item is param of that loop */\r\n          items.map((item) => {\r\n            /* Return however many NavItems in array to be rendered */\r\n            return (\r\n              <NavItem path={item.path} name={item.name} css={item.css} onItemClick={this.onItemClick} /* Simply passed an entire function to onClick prop */ active={item.path === activePath} key={item.key}/>\r\n            )\r\n          })\r\n        }\r\n      </StyledSideNav>\r\n    );\r\n  }\r\n}\r\n\r\nconst RouterSideNav = withRouter(SideNav);\r\n\r\nexport default class Sidebar extends React.Component {\r\n  render() {\r\n    return (\r\n      <RouterSideNav></RouterSideNav>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}