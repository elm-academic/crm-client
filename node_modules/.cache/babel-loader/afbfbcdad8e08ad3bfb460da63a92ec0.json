{"ast":null,"code":"var _jsxFileName = \"/home/meriem/lighthouse/Final_Project/project/client/src/components/Dashboard.js\";\nimport React from 'react';\nimport { ResponsiveContainer, PieChart, Pie, Cell, Sector, Tooltip, Legend } from 'recharts';\nimport styled from 'styled-components';\nconst StyledChart1 = styled.div`\n  height: 40%;\n  width: 40%; \n  text-align: center; /* Aligns <a> inside of NavIcon div */\n  background-color: #D3D3D3;\n`;\nconst Wrapper = styled.div`\n  margin-top: 5em;\n  margin-left: 7em;\n  margin-right: 20em;\n  margin-bottom: 5em;\n`;\n\nconst Dashboard = () => {\n  const data = [{\n    name: 'Group A',\n    value: 400\n  }, {\n    name: 'Group B',\n    value: 300\n  }, {\n    name: 'Group C',\n    value: 300\n  }, {\n    name: 'Group D',\n    value: 200\n  }]; // const data =[\n  //       { name: \"facebook\", value: 120111},\n  //       {name: \"Instagram\", value : 1547870},\n  //    ]; \n\n  const COLORS = ['#0088FE', '#FF8042'];\n  const RADIAN = Math.PI / 180;\n\n  const renderCustomizedLabel = ({\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    percent,\n    index\n  }) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n    return /*#__PURE__*/React.createElement(\"text\", {\n      x: x,\n      y: y,\n      fill: \"white\",\n      textAnchor: x > cx ? 'start' : 'end',\n      dominantBaseline: \"central\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }, `${(percent * 100).toFixed(0)}%`);\n  };\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledChart1, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }\n  }, \" Dashboard\"), /*#__PURE__*/React.createElement(PieChart, {\n    width: 400,\n    height: 400,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Pie, {\n    data: data,\n    cx: 200,\n    cy: 200 //labelLine={true}\n    //label\n    ,\n    labelLine: false,\n    label: renderCustomizedLabel,\n    outerRadius: 80,\n    fill: \"#8884d8\",\n    dataKey: \"value\",\n    Legend: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, data.map((entry, index) => /*#__PURE__*/React.createElement(Cell, {\n    key: `cell-${index}`,\n    fill: COLORS[index % COLORS.length],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 40\n    }\n  }))), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  })))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/meriem/lighthouse/Final_Project/project/client/src/components/Dashboard.js"],"names":["React","ResponsiveContainer","PieChart","Pie","Cell","Sector","Tooltip","Legend","styled","StyledChart1","div","Wrapper","Dashboard","data","name","value","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","x","cos","y","sin","toFixed","map","entry","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ResponsiveContainer, PieChart, Pie, Cell, Sector, Tooltip, Legend } from 'recharts';\nimport styled from 'styled-components';\n\n\nconst StyledChart1 = styled.div`\n  height: 40%;\n  width: 40%; \n  text-align: center; /* Aligns <a> inside of NavIcon div */\n  background-color: #D3D3D3;\n`;\nconst Wrapper = styled.div`\n  margin-top: 5em;\n  margin-left: 7em;\n  margin-right: 20em;\n  margin-bottom: 5em;\n`;\nconst Dashboard = () => {\n\n  const data = [\n    { name: 'Group A', value: 400 }, { name: 'Group B', value: 300 },\n    { name: 'Group C', value: 300 }, { name: 'Group D', value: 200 },\n  ];\n  \n// const data =[\n//       { name: \"facebook\", value: 120111},\n//       {name: \"Instagram\", value : 1547870},\n//    ]; \n\nconst COLORS = ['#0088FE', '#FF8042'];\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx, cy, midAngle, innerRadius, outerRadius, percent, index,\n}) => {\n   const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\n \nreturn (\n  \n  <Wrapper>\n    <div className ='App'>\n   \n  <StyledChart1>\n  <h2> Dashboard</h2>\n  <PieChart width={400} height={400}>\n          <Pie\n          data={data}\n          cx={200}\n          cy={200}\n          //labelLine={true}\n          //label\n          labelLine={false}\n          label={renderCustomizedLabel}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n          Legend\n        >\n          {\n            data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n          }\n        </Pie>\n        <Tooltip/>\n        <Legend/>\n      </PieChart>\n\n  </StyledChart1>\n\n    </div>\n  </Wrapper>\n)\n\n};\n\n\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}