{"ast":null,"code":"var _jsxFileName = \"/home/meriem/lighthouse/Final_Project/project/client/src/components/Dashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { BarChart, XAxis, YAxis, CartesianGrid, Bar, ResponsiveContainer, PieChart, Pie, Cell, Sector, Tooltip, Legend } from 'recharts';\nimport styled from 'styled-components';\nimport axios from 'axios';\nconst StyledChart1 = styled.div`\n  height: 40%;\n  width: 40%; \n  text-align: center; /* Aligns <a> inside of NavIcon div */\n  background-color: #F5F5F5;\n  margin: 10px 10px;\n  padding: 12px 6px;\n  border-radius: 5px;\n  \n`;\nconst Wrapper = styled.div`\n  margin-top: 5em;\n  margin-left: 7em;\n  margin-right: 20em;\n  margin-bottom: 5em;\n`;\n\nconst Dashboard = () => {\n  const [data1, setData] = useState([]);\n  const [data2, setData2] = useState([]);\n  const [data3, setData3] = useState([]);\n  const [data4, setData4] = useState([]);\n  const [data5, setData5] = useState([]);\n  const [data6, setData6] = useState([]);\n  const [data7, setData7] = useState([]);\n  useEffect(() => {\n    Promise.all([axios.get('/dashboard')]).then(all => {\n      setData(all[0].data[0].rows[0].count);\n      setData2(all[0].data[1].rows[0].count);\n      setData3(all[0].data[2].rows[0].count);\n      setData4(all[0].data[3].rows[0].count);\n      setData5(all[0].data[4].rows[0].count);\n      setData6(all[0].data[5].rows[0].sum);\n      setData7(all[0].data[6].rows[0].sum);\n    });\n  }, []);\n  const first = [{\n    name: 'Quality reviews in progress',\n    value: Number(data1)\n  }, {\n    name: 'Quality review completed',\n    value: Number(data2)\n  }];\n  const COLORS = ['#FFC107', '#4CAF50', '#FFBB28', '#FF8042'];\n  const RADIAN = Math.PI / 180;\n\n  const renderCustomizedLabel = ({\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    percent,\n    index\n  }) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n    return /*#__PURE__*/React.createElement(\"text\", {\n      x: x,\n      y: y,\n      fill: \"white\",\n      textAnchor: x > cx ? 'start' : 'end',\n      dominantBaseline: \"central\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }\n    }, `${(percent * 100).toFixed(0)}%`);\n  };\n\n  const second = [{\n    name: 'Current',\n    current: data3\n  }, {\n    name: 'Completed',\n    completed: data4\n  }, {\n    name: 'Upcoming',\n    upcoming: data5\n  }];\n  const third = [{\n    name: 'Revenue In Progress',\n    value: data6\n  }, {\n    name: 'Revenue Completed',\n    value: data7\n  }];\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(StyledChart1, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 3\n    }\n  }, \" Quality reviews \"), /*#__PURE__*/React.createElement(PieChart, {\n    width: 400,\n    height: 400,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Pie, {\n    data: first,\n    cx: 200,\n    cy: 200,\n    label: renderCustomizedLabel //labelLine={true}\n    ,\n    label: true,\n    labelLine: false,\n    outerRadius: 100,\n    fill: \"#8884d8\",\n    dataKey: \"value\",\n    Legend: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, first.map((entry, index) => /*#__PURE__*/React.createElement(Cell, {\n    key: `cell-${index}`,\n    fill: COLORS[index % COLORS.length],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 3\n    }\n  }, \" Projects \"), /*#__PURE__*/React.createElement(BarChart, {\n    width: 500,\n    height: 300,\n    data: second,\n    margin: {\n      top: 5,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"current\",\n    fill: \"#8884d8\",\n    barSize: 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"completed\",\n    fill: \"#82ca9d\",\n    barSize: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"upcoming\",\n    fill: \"#4CAF50\",\n    barSize: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(StyledChart1, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(PieChart, {\n    width: 800,\n    height: 400,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Pie, {\n    data: third,\n    cx: 120,\n    cy: 200,\n    innerRadius: 60,\n    outerRadius: 100,\n    fill: \"#8884d8\",\n    paddingAngle: 5,\n    label: renderCustomizedLabel,\n    dataKey: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, third.map((entry, index) => /*#__PURE__*/React.createElement(Cell, {\n    key: `cell-${index}`,\n    fill: COLORS[index % COLORS.length],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  })))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/meriem/lighthouse/Final_Project/project/client/src/components/Dashboard.js"],"names":["React","useState","useEffect","BarChart","XAxis","YAxis","CartesianGrid","Bar","ResponsiveContainer","PieChart","Pie","Cell","Sector","Tooltip","Legend","styled","axios","StyledChart1","div","Wrapper","Dashboard","data1","setData","data2","setData2","data3","setData3","data4","setData4","data5","setData5","data6","setData6","data7","setData7","Promise","all","get","then","data","rows","count","sum","first","name","value","Number","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","x","cos","y","sin","toFixed","second","current","completed","upcoming","third","map","entry","length","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BarChart, XAxis, YAxis, CartesianGrid, Bar, ResponsiveContainer, PieChart, Pie, Cell, Sector, Tooltip, Legend } from 'recharts';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\n\n\nconst StyledChart1 = styled.div`\n  height: 40%;\n  width: 40%; \n  text-align: center; /* Aligns <a> inside of NavIcon div */\n  background-color: #F5F5F5;\n  margin: 10px 10px;\n  padding: 12px 6px;\n  border-radius: 5px;\n  \n`;\nconst Wrapper = styled.div`\n  margin-top: 5em;\n  margin-left: 7em;\n  margin-right: 20em;\n  margin-bottom: 5em;\n`;\nconst Dashboard = () => {\n  \n  const [data1, setData] = useState([]);\n  const [data2, setData2] = useState([]);\n  const [data3, setData3] = useState([]);\n  const [data4, setData4] = useState([]);\n  const [data5, setData5] = useState([]);\n  const [data6, setData6] = useState([]);\n  const [data7, setData7] = useState([]);\n  \n  \n  useEffect(() => {\n    Promise.all([\n      axios.get('/dashboard'),\n    ]).then((all) => {\n    setData(all[0].data[0].rows[0].count);\n    setData2(all[0].data[1].rows[0].count);\n    setData3(all[0].data[2].rows[0].count);\n    setData4(all[0].data[3].rows[0].count);\n    setData5(all[0].data[4].rows[0].count);\n    setData6(all[0].data[5].rows[0].sum);\n    setData7(all[0].data[6].rows[0].sum);\n    });\n  }, []);\n\n const first = [\n    { name: 'Quality reviews in progress', value: Number(data1) }, { name: 'Quality review completed', value: Number(data2) },\n  ];\n  \nconst COLORS = ['#FFC107', '#4CAF50', '#FFBB28', '#FF8042'];\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx, cy, midAngle, innerRadius, outerRadius, percent, index,\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\n \nconst second = [\n  {\n    name: 'Current', current: data3,\n  },\n  {\n    name: 'Completed', completed: data4,\n  },\n  {\n    name: 'Upcoming', upcoming: data5,\n  },\n \n];\n\nconst third = [\n  { name: 'Revenue In Progress', value: data6  },\n  { name: 'Revenue Completed', value: data7 },\n];\n\nreturn (\n  \n  <Wrapper>\n  <div className ='App'>   \n  {/* <h2>Dashboard</h2> */}\n  <StyledChart1>\n  <h5> Quality reviews </h5>\n  <PieChart width={400} height={400}>\n          <Pie\n          data={first}\n          cx={200}\n          cy={200}\n          label={renderCustomizedLabel}\n          //labelLine={true}\n          label\n          labelLine={false}\n          outerRadius={100}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n          Legend\n        >\n          {\n            first.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n          }\n        </Pie>\n        <Tooltip/>\n        <Legend/>\n  </PieChart>\n  </StyledChart1>\n  {/* <StyledChart1> */}\n  <h5> Projects </h5>\n  <BarChart\n        width={500}\n        height={300}\n        data={second}\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"current\" fill=\"#8884d8\" barSize={200} />\n        <Bar dataKey=\"completed\" fill=\"#82ca9d\" barSize={100} />\n        <Bar dataKey=\"upcoming\" fill=\"#4CAF50\" barSize={100} />\n  </BarChart>\n  {/* </StyledChart1> */}\n\n<StyledChart1> \n\n<PieChart width={800} height={400} >\n        <Pie\n          data={third}\n          cx={120}\n          cy={200}\n          innerRadius={60}\n          outerRadius={100}\n          fill=\"#8884d8\"\n          paddingAngle={5}\n          label={renderCustomizedLabel}\n          dataKey=\"value\"\n        >\n          {\n            third.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n          }\n        </Pie>\n        <Tooltip />\n        <Legend />\n        </PieChart>\n</StyledChart1>\n\n\n</div>\n</Wrapper>\n)\n\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}