{"ast":null,"code":"var _jsxFileName = \"/home/meriem/lighthouse/Final_Project/project/client/src/components/ClientList.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ClientItem from './ClientItem';\n\nconst ClientList = () => {\n  //set default value of client to array\n  const [clients, setClients] = useState([]);\n  useEffect(() => {\n    Promise.all([axios.get('/clients')]).then(all => {\n      setClients(all[0].data);\n    });\n  }, []);\n\n  const getClients = async () => {\n    const response = await axios.get(`/clients`);\n    console.log(\"console log of getClients\", response);\n    setClients(response.data);\n  };\n\n  const handleDelete = id => {\n    axios.delete(`/clients/${id}`).then(res => {\n      console.log(\"res\", res);\n\n      if (res.status !== 200) {\n        alert(\"Not able to delete client\");\n      } else {\n        alert(\"client deleted\");\n        getClients();\n      }\n    });\n  };\n\n  const clients_list = clients.map(client => /*#__PURE__*/React.createElement(ClientItem, {\n    key: client.id,\n    id: client.id,\n    first_name: client.first_name,\n    last_name: client.last_name,\n    email: client.email,\n    region: client.region,\n    tweeter_username: client.tweeter_username,\n    onDelete: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 46\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-striped\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"id\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Region\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Tweeter_Username\"), /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 3\n    }\n  }, clients_list));\n};\n\nexport default ClientList;","map":{"version":3,"sources":["/home/meriem/lighthouse/Final_Project/project/client/src/components/ClientList.js"],"names":["React","useState","useEffect","axios","ClientItem","ClientList","clients","setClients","Promise","all","get","then","data","getClients","response","console","log","handleDelete","id","delete","res","status","alert","clients_list","map","client","first_name","last_name","email","region","tweeter_username"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ClientItem from './ClientItem';\n\nconst ClientList = () => {\n\n//set default value of client to array\n  \nconst [clients, setClients] = useState([]);\nuseEffect(() => {\n  Promise.all([\n    axios.get('/clients'),\n  ]).then((all) => {\n    setClients(all[0].data);   \n });\n}, []);\n\nconst getClients = async()=>{\n const response = await axios.get(`/clients`);\n console.log(\"console log of getClients\", response); \n setClients(response.data);\n}\nconst handleDelete =(id) => {\n  \n  axios.delete(`/clients/${id}`)\n  .then( res=> {\n    console.log(\"res\", res);\n    if(res.status !== 200) {\n      alert(\"Not able to delete client\");\n    }\n    else {\n      alert(\"client deleted\");\n      getClients();\n    }\n  })\n}\n\nconst clients_list = clients.map((client) => <ClientItem\n  key = {client.id}\n  id = {client.id}\n  first_name = {client.first_name}\n  last_name = {client.last_name}\n  email = {client.email}\n  region = {client.region}\n  tweeter_username = {client.tweeter_username}\n  onDelete={handleDelete}\n  />\n )\n\n\nreturn (\n  <table className=\"table table-striped\">\n  <thead>\n    <tr>\n      <th scope=\"col\">id</th>\n      <th scope=\"col\">First Name</th>\n      <th scope=\"col\">Last Name</th>\n      <th scope=\"col\">Email</th>\n      <th scope=\"col\">Region</th>\n      <th scope=\"col\">Tweeter_Username</th>\n      <th scope=\"col\">Actions</th>\n    </tr>\n  </thead>\n  \n  <tbody>\n     {clients_list}\n  </tbody>\n</table>\n);\n\n}\n\n\nexport default ClientList;\n"]},"metadata":{},"sourceType":"module"}